---
 - name: Create Selenoid network
   docker_network:
     name: "{{ selenoid_network }}"

 - name: Create Selenoid container
   docker_container:
     name: "selenoid{{ build_tag }}"
     image: "aerokube/selenoid:latest"
     networks:
       - name: "{{ selenoid_network }}"
     volumes:
       - "/var/run/docker.sock:/var/run/docker.sock"
     published_ports:
       - "{{ selenoid_host_port }}:{{ selenoid_container_port }}"
     command: ["-conf", "/etc/browsers.json",
               "-container-network", "{{ selenoid_network }}",
               "-video-output-dir", "/opt/selenoid/video",
               "-log-output-dir", "/opt/selenoid/logs",
               "-service-startup-timeout", "{{ service_startup_timeout }}",
               "-session-delete-timeout", "{{ session_delete_timeout }}",
               "-timeout", "{{ timeout }}",
               "-capture-driver-logs"]
     memory: 1G
     state: present

 - name: Copy 'browsers.json' to container
   shell: "docker cp {{ role_path }}/files/browsers.json selenoid{{ build_tag }}:/etc"

 - name: Pull browser and video images
   shell: |
     cat {{ role_path }}/files/browsers.json | jq -r '..|.image?|strings' | xargs -I{} docker pull {}
     docker pull selenoid/video-recorder:latest-release

 - name: Start Selenoid container
   docker_container:
     name: "selenoid{{ build_tag }}"
     state: "{{ desired_state }}"
   register: selenoid_metadata

 - name: Run Selenoid UI container
   docker_container:
     name: "selenoid-ui{{ build_tag }}"
     image: "aerokube/selenoid-ui:latest"
     detach: true
     networks:
       - name: "{{ selenoid_network }}"
     published_ports:
       - "{{ selenoid_ui_host_port }}:{{ selenoid_ui_container_port }}"
     state: "{{ desired_state }}"
     command: ["-selenoid-uri", "http://selenoid{{ build_tag }}:{{ selenoid_container_port }}"]
     memory: 1G
   register: selenoid_ui_metadata